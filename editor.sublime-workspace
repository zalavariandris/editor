{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"Sp",
				"SpotLight"
			],
			[
				"saml",
				"sampler2D"
			],
			[
				"sam",
				"sampler2D"
			],
			[
				"set",
				"set_uniform"
			],
			[
				"p",
				"property\tNew Property"
			],
			[
				"geom",
				"geometry"
			],
			[
				"env",
				"environment_image"
			],
			[
				"forward",
				"forward_texture"
			],
			[
				"forw",
				"forward_fbo"
			],
			[
				"for",
				"forward_fbo"
			],
			[
				"cam",
				"camera"
			],
			[
				"cub",
				"cubemap"
			],
			[
				"Tonem",
				"TonemappingPass"
			],
			[
				"tonema",
				"tonemapping_pass"
			],
			[
				"tonem",
				"tonemapping_pass"
			],
			[
				"en",
				"environment_tex"
			],
			[
				"br",
				"brdfLUT"
			],
			[
				"sampler",
				"sampler2D"
			],
			[
				"prefi",
				"prefilterMap"
			],
			[
				"irra",
				"irradianceMap"
			],
			[
				"came",
				"cameraPos"
			],
			[
				"brd",
				"brdflut"
			],
			[
				"irr",
				"irradiance_pass"
			],
			[
				"prefilter",
				"prefilter_pass"
			],
			[
				"light",
				"lighting_pass"
			],
			[
				"ligh",
				"lighting_pass"
			],
			[
				"envir",
				"environment_pass"
			],
			[
				"glGen",
				"glGenFramebuffers"
			],
			[
				"cube_",
				"cube_height"
			],
			[
				"e",
				"environment_image"
			],
			[
				"imag",
				"environment_image"
			],
			[
				"wi",
				"width"
			],
			[
				"GL_TE",
				"GL_TEXTURE_2D"
			],
			[
				"tex",
				"texture"
			],
			[
				"shado",
				"shadowcube"
			],
			[
				"shadowM",
				"shadowMapIdx"
			],
			[
				"shadow",
				"shadowmap"
			],
			[
				"pr",
				"projection"
			],
			[
				"shad",
				"shadowpass"
			],
			[
				"sh",
				"shadowpass"
			],
			[
				"glBind",
				"glBindFramebuffer"
			],
			[
				"depth",
				"depth_test"
			],
			[
				"GL_DEP",
				"GL_DEPTH_COMPONENT"
			],
			[
				"smaple",
				"sampleDepth"
			],
			[
				"sample",
				"sampleDepth"
			],
			[
				"range",
				"rangeCheck"
			],
			[
				"ran",
				"rangeCheck"
			],
			[
				"proj",
				"projectionMatrix"
			],
			[
				"sa",
				"samples"
			],
			[
				"po",
				"position"
			],
			[
				"spotli",
				"spotlight"
			],
			[
				"dirlight",
				"dirlight"
			],
			[
				"pro",
				"projection"
			],
			[
				"dir",
				"direction"
			],
			[
				"Dir",
				"DirectionalLight"
			],
			[
				"di",
				"direction"
			],
			[
				"spo",
				"spotlight"
			],
			[
				"pointlight",
				"pointlight"
			],
			[
				"light_",
				"light_view"
			],
			[
				"spotlight",
				"spotlight_shadowmap"
			],
			[
				"point",
				"pointlight_shadowmap"
			],
			[
				"pointlight_",
				"pointlight_fbo"
			],
			[
				"dirli",
				"dirlight"
			],
			[
				"spotil",
				"spotlight"
			],
			[
				"poin",
				"pointlight"
			],
			[
				"pointli",
				"pointlight_shadowmap"
			],
			[
				"lig",
				"light"
			],
			[
				"shaodw_",
				"shadow_height"
			],
			[
				"glGetShader",
				"glGetShaderInfoLog"
			],
			[
				"shadow_",
				"shadow_cubemap"
			],
			[
				"glFramebuffer",
				"glFramebufferTexture2D"
			],
			[
				"GL_DEPTH",
				"GL_DEPTH_COMPONENT"
			],
			[
				"GL_TEX",
				"GL_TEXTURE_CUBE_MAP"
			],
			[
				"li",
				"light"
			],
			[
				"Po",
				"POINT"
			],
			[
				"Spo",
				"SPOT"
			],
			[
				"Dire",
				"DIRECTIONAL"
			],
			[
				"Light",
				"LightType"
			],
			[
				"Ligh",
				"LightType"
			],
			[
				"sha",
				"shadow_fbo"
			],
			[
				"be",
				"beautyBuffer"
			],
			[
				"env_",
				"env_cubemap"
			],
			[
				"pref",
				"prefilterMap"
			],
			[
				"Fra",
				"fragPos"
			],
			[
				"fragPos",
				"fragPosLightSpace"
			],
			[
				"tone",
				"tonemapping_color"
			],
			[
				"GL_",
				"GL_COLOR_BUFFER_BIT"
			],
			[
				"blur_",
				"blur_texs"
			],
			[
				"bloo",
				"bloom_tex"
			],
			[
				"blur",
				"blur_program"
			],
			[
				"glBin",
				"glBindRenderbuffer"
			],
			[
				"ssao",
				"ssao_fbo"
			],
			[
				"prog",
				"program"
			],
			[
				"model",
				"modelMatrix"
			],
			[
				"view",
				"view_matrix"
			],
			[
				"draw",
				"draw_scene"
			],
			[
				"gbuffer",
				"gbuffer_program"
			],
			[
				"g",
				"gAlbedoSpec"
			],
			[
				"S",
				"SCR_WIDTH"
			],
			[
				"GL_COLOR",
				"GL_COLOR_ATTACHMENT2"
			],
			[
				"GL_COLO",
				"GL_COLOR_ATTACHMENT0"
			],
			[
				"glFrameB",
				"glFramebufferTexture2D"
			],
			[
				"SCR",
				"SCR_HEIGHT"
			],
			[
				"GL_Te",
				"GL_TEXTURE_2D"
			],
			[
				"pin",
				"pingpong_buffer"
			],
			[
				"bloom",
				"bloomColor"
			],
			[
				"h",
				"height"
			],
			[
				"ton",
				"tonamapping_program"
			],
			[
				"gau",
				"gaussianblur_program"
			],
			[
				"GL_RGB",
				"GL_RGBA16F"
			],
			[
				"ping",
				"pingpong_buffer"
			],
			[
				"pingpon",
				"pingpong_fbo"
			],
			[
				"GL_TEXTURE",
				"GL_TEXTURE_2D"
			],
			[
				"glTex",
				"glTexImage2D"
			],
			[
				"pong",
				"pingpong_buffer"
			],
			[
				"color",
				"color_buffers"
			],
			[
				"sphere",
				"sphere_geo"
			],
			[
				"plane",
				"plane_geo"
			],
			[
				"quad",
				"quad_geo"
			],
			[
				"nor",
				"normals"
			],
			[
				"GL_TEXTURE_",
				"GL_TEXTURE_CUBE_MAP"
			],
			[
				"simple_",
				"simple_depth_fs"
			],
			[
				"pho",
				"phong_program"
			],
			[
				"spe",
				"specular"
			],
			[
				"diffuse",
				"diffuseColor"
			],
			[
				"pos",
				"positions"
			],
			[
				"normal",
				"normal_matrix"
			],
			[
				"amb",
				"ambientColor"
			]
		]
	},
	"buffers":
	[
		{
			"file": "render/graphics/scene.py",
			"settings":
			{
				"buffer_size": 5618,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "#version 330 core\n#define NUM_LIGHTS 3\n#define NUM_SHADOWMAPS 2\n#define NUM_SHADOWCUBES 1\nconst float PI = 3.14159265359;\n\nuniform vec3 cameraPos;\nuniform sampler2D gPosition;\nuniform sampler2D gNormal;\nuniform sampler2D gAlbedoSpecular;\nuniform sampler2D gRoughness;\nuniform sampler2D gMetallic;\nuniform sampler2D gEmissive;\n\nin vec2 TexCoords;\nout vec4 FragColor;\n\nstruct Light{\n\tint type;\n\tvec3 color;\n\tvec3 position;\n\tvec3 direction;\n\tfloat cutOff;\n\tmat4 matrix;\n\tint shadowIdx;\n\n\tfloat nearPlane;\n\tfloat farPlane;\n};\n\nuniform Light lights[NUM_LIGHTS];\nuniform sampler2D shadowMaps[NUM_SHADOWMAPS];\nuniform samplerCube shadowCubes[NUM_SHADOWCUBES];\nuniform samplerCube irradianceMap;\nuniform samplerCube prefilterMap;\nuniform sampler2D brdfLUT;\n\nfloat ShadowCalculation(vec4 fragPosLightSpace, vec3 lightDir, vec3 normal, sampler2D shadowMap){\n\t// perform perspective divide\n\tvec3 projCoords = fragPosLightSpace.xyz / fragPosLightSpace.w;\n\n\tprojCoords = projCoords*0.5+0.5;\n\tif(projCoords.z>1.0)\n\t\treturn 0.0;\n\n\tfloat closestDepth = texture(shadowMap, projCoords.xy).r;\n\tfloat currentDepth = projCoords.z;\n\n\tif(dot(normal, lightDir)<0.0)\n\t  return 0.0;\n\n\t// float bias = max(0.005 * (1.0 - dot(normal, lightDir)), 0.0005);\n\tfloat bias = 0.0001;\n\tfloat pcfDepth = texture(shadowMap, projCoords.xy).r; \n\tfloat shadow = currentDepth - bias > pcfDepth ? 1.0 : 0.0;\n\treturn shadow;\n}\n\nfloat PointShadowCalculation(vec3 lightPos, vec3 surfacePos, samplerCube shadowCubemap, float farPlane){\n\tvec3 L=surfacePos-lightPos;\n\tfloat shadowDepth = texture(shadowCubemap, normalize(L)).r;\n\tshadowDepth*=farPlane;\n\n\tfloat surfaceDepth = length(L);\n\n\tfloat bias = 0.1;\n\tfloat shadow = surfaceDepth > shadowDepth ? 1.0 : 0.0;\n\n\treturn shadow;\n}\n\n/*self shadowing microfacets*/\nfloat distributionGGX(float NdotH, float roughness){\n\tfloat a = roughness * roughness;\n\tfloat a2 = a*a;\n\tfloat denom = NdotH * NdotH * (a2-1.0)+1.0;\n\tdenom = PI * denom * denom;\n\treturn a2 / max(denom, 0.0000001); \n}\n\n/*rougness effect based on light and normnal angle*/\nfloat geometrySmith(float NdotV, float NdotL, float roughness){\n\tfloat r = roughness + 1.0;\n\tfloat k = (r*r)/8.0;\n\tfloat ggx1 = NdotV / (NdotV * (1.0-k)+k);\n\tfloat ggx2 = NdotL / (NdotL * (1.0-k)+k);\n\treturn ggx1 * ggx2;\n}\n\nvec3 fresnelSchlick(float cosTheta, vec3 F0)\n{\n    return F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);\n}\n\nvec3 fresnelSchlickRoughness(float HdotV, vec3 F0, float roughness){\n\t// base reflectivity in range 0 to 1\n\t// returns range to 1\n\t// increases as HdotV decreases (more reflectivity when surface viewd at larger angles)\n\treturn F0 + (max(vec3(1.0 - roughness), F0) - F0) * pow(1.0 - HdotV, 5.0);\n}\n\nvoid main()\n{\n\t// Pull geometry properties\n\tvec3 surfacePos = texture(gPosition, TexCoords).rgb;\n\tvec3 surfaceNormal = texture(gNormal, TexCoords).rgb;\n\n\t// Pull material properties\n\tvec3 albedo = texture(gAlbedoSpecular, TexCoords).rgb;\n\tfloat roughness = texture(gRoughness, TexCoords).r;\n\tfloat metallic = texture(gMetallic, TexCoords).r;\n\tfloat ao = 1.0;\n\n\t// Calculate lighting\n\t// ==================\n\tvec3 N = gl_FrontFacing ? normalize(surfaceNormal) : -normalize(surfaceNormal);\n\tvec3 V = normalize(cameraPos - surfacePos); //view vector\n\tvec3 R = reflect(-V, N);\n\tvec3 baseReflectivity = mix(vec3(0.04), albedo, metallic);\n\n\t// Reflectance equatation\n\t// ----------------------\n\tvec3 Lo=vec3(0);\n\tfor(int i=0; i<NUM_LIGHTS; ++i)\n\t{\n\t\t// Calculate each light radiance\n\t\t// ----------------------------\n\t\tvec3 L=vec3(0);\n\t\tfloat attenuation=1.0;\n\t\tif(lights[i].type==0)\n\t\t{\n\t\t\tL = normalize(-lights[i].direction);\n\t\t\tattenuation=1.0;\n\n\t\t\t// calc shadow\n\t\t\tvec4 fragPosLightSpace = lights[i].matrix * vec4(surfacePos, 1.0);\n\t\t\tfloat shadow = ShadowCalculation(fragPosLightSpace, L, N, shadowMaps[lights[i].shadowIdx]);\n\t\t\tattenuation*=1-shadow;\n\t\t}\n\t\telse if(lights[i].type==1)\n\t\t{\n\t\t\tL = normalize(lights[i].position - surfacePos);\n\t\t\tfloat distance = length(lights[i].position - surfacePos);\n\t\t\tattenuation = 1.0 / (distance*distance);\n\n\t\t\t// spotlight cutoff\n\t\t\tif(lights[i].cutOff>=0)\n\t\t\t{\n\t\t\t\tfloat theta = dot(L, normalize(-lights[i].direction));\n\t\t\t\tif(theta<lights[i].cutOff){\n\t\t\t\t\tattenuation=0.0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// calc shadow\n\t\t\tvec4 fragPosLightSpace = lights[i].matrix * vec4(surfacePos, 1.0);\n\t\t\tfloat shadow = ShadowCalculation(fragPosLightSpace, L, N, shadowMaps[lights[i].shadowIdx]);\n\t\t\tattenuation*=1-shadow;\n\t\t}\n\t\telse if(lights[i].type==2){\n\t\t\tL = normalize(lights[i].position - surfacePos);\n\t\t\tfloat distance = length(lights[i].position - surfacePos);\n\t\t\tattenuation = 1.0 / (distance*distance);\n\n\t\t\t// calc shadow\n\t\t\tfloat shadow = PointShadowCalculation(lights[i].position, surfacePos, shadowCubes[0], lights[i].farPlane);\n\t\t\tattenuation*=1-shadow;\n\t\t}\n\t\telse{\n\t\t\tcontinue;\n\t\t}\n\n\t\tvec3 radiance = lights[i].color * attenuation;\n\t\t\n\t\t// Cook-Torrance BRDF, calcuate per-light surface luminance\n\t\t// ========================================================\n\t\tfloat diff = max(dot(N, L), 0.0);\n\t\tvec3 H = normalize(V+L); /* halfway bysecting vector */\n\t\tfloat NdotV = max(dot(N, V), 0.0000001);\n\t\tfloat NdotL = max(dot(N, L), 0.0000001);\n\t\tfloat HdotV = max(dot(H, V), 0.0);\n\t\tfloat NdotH = max(dot(N, H), 0.0);\n\n\t\tfloat D = distributionGGX(NdotH, roughness); // larger the more micro-facets aligned to H\n\t\tfloat G = geometrySmith(NdotV, NdotL, roughness); // smaller the more microfacets shadowed by other micro-facets\n\t\tvec3 F = fresnelSchlick(HdotV, baseReflectivity); //proportion of specular reflectance\n\n\t\tvec3 specular = D * G * F;\n\t\tspecular /= 4.0 * NdotV * NdotL;\n\n\t\t// for energy conservation, the diffuse and specular light cant\n\t\t// be above 1.0 (unless the surface emits light); to preserve this\n\t\t// relationship the diffuse component (kD) should equal 1.0-kS.\n\t\t// kD: diffuse component\n\t\t// Ks: specular component\n\t\tvec3 kD = vec3(1.0) - F; //F equals kS\n\t\tkD *= 1.0 - metallic;\n\n\t\t// calc surface luminance\n\t\t// ----------------------\n\t\tvec3 luminance = (kD * albedo / PI + specular) * radiance * NdotL;\n\t\t// accumulate\n\t\tLo+=luminance;\n\t}\n\n\t// IBL ambient\n\t// -----------\n\t// # Diffuse component\n\tvec3 F = fresnelSchlickRoughness(max(dot(N, V), 0.0), baseReflectivity, roughness);\n    vec3 kS = F;\n    vec3 kD = 1.0 - kS;\n    kD *= 1.0 - metallic;\t  \n    \n    vec3 irradiance = texture(irradianceMap, N).rgb;\n    vec3 diffuse      = irradiance * albedo;\n    \n    // # Specular component\n    // sample both the pre-filter map and the BRDF lut and combine them together as per the Split-Sum approximation to get the IBL specular part.\n    const float MAX_REFLECTION_LOD = 4.0;\n    vec3 prefilteredColor = textureLod(prefilterMap, R,  roughness * MAX_REFLECTION_LOD).rgb;    \n    vec2 brdf  = texture(brdfLUT, vec2(max(dot(N, V), 0.0), roughness)).rg;\n    vec3 specular = prefilteredColor * (F * brdf.x + brdf.y);\n\n    // combine diffuse and specular component lighting\n    vec3 ambient = (kD * diffuse + specular) * ao;\n\n\t//\n\tvec3 color = Lo+ambient;\n\n\tFragColor = vec4(color, 1.0);\n}",
			"file": "render/glsl/PBR2.fs",
			"file_size": 7224,
			"file_write_time": 132452620375012425,
			"settings":
			{
				"buffer_size": 6990,
				"line_ending": "Windows"
			}
		},
		{
			"file": "render/graphics/example/trimesh_example.py",
			"settings":
			{
				"buffer_size": 1843,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"he",
				"HexViewer: Toggle Hex View"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"insall ",
				"Package Control: Install Package"
			],
			[
				"close",
				"Terminus: Close All"
			],
			[
				"cl",
				"Terminus: Close All"
			],
			[
				"termin",
				"Terminus: Close All"
			],
			[
				"termiun",
				"Terminus: Close All"
			],
			[
				"ter",
				"Terminus: Close"
			],
			[
				"terminus key",
				"Preferences: Terminal Key Bindings – User"
			],
			[
				"terminus",
				"Preferences: Terminus Settings"
			],
			[
				"toggle",
				"Terminus: Toggle Panel"
			],
			[
				"togg",
				"Terminus: Toggle Panel"
			],
			[
				"t",
				"Terminus: Toggle Panel"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 388.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/andris/Documents/BABPythonModules/editor",
		"/C/Users/andris/Documents/BABPythonModules/editor/render",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example"
	],
	"file_history":
	[
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/program.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/window/pyglet_window.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/window/glfw_threaded_viewer.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/deferred_pbr_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/deferred_pbr2-example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/deferred_geometry.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/PBR2.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/lightingpass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/geometrypass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/tonemappingpass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/cubedepthpass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/depthpass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/environmentpass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/iblpass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/matcap_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/matcap.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/renderpass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/examples/skybox_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/imdraw/cubemap.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/example/skyboxpass.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/tonemapping.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/examples/deferred_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/texture.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/cameras.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/deferred_pbr.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/pbr.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/examples/API_IDEA.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/window/glfw_window.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/examples/pbr_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/fbo.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/deferred_pbr_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/equirectangular_to_cubemap.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/ssao.fs",
		"/C/Users/andris/anaconda3/lib/site-packages/glfw/__init__.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/viewer.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/examples/ssao_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/examples/point_light_shadow_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/imdraw/cube.py",
		"/C/Users/andris/anaconda3/lib/site-packages/OpenGL/error.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/point_shadow.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/point_shadow.gs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/point_shadow.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/examples/minimal_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/imdraw/plane.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/points_shadow.gs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/cutoff_highlights.fs",
		"/C/Users/andris/anaconda3/lib/functools.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/deferred_pbr.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/simple_depth.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/pbr.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/gaussianblur.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/imdraw/texture.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/examples/minimal_example1.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/gBuffer.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/gBuffer.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/minimal_example1.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/pbr_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/gaussian.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/gaussian.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/imdraw/quad.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/merge_add.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/tonemapping.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/shuffle.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/debug_quad.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/screen.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/imdraw/sphere.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/__init__.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/utils.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/imdraw/helpers.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/imdraw.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/minimal_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/phong.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/phong.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/geo.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/helpers.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/draw.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/pano-converter3.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/skybox.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/skybox.vs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/simple_depth_shader.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/puregl/__init__.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/debug_quad_depth.fs",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/glsl/simple_depth_shader.vs",
		"/C/Users/andris/anaconda3/lib/site-packages/multipledispatch/dispatcher.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo_with_glfw.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/renderer.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics/graphics.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/__init__.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/program.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/buffers.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/vao.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo_examples/opengl_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo_examples/minimal_example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/window/__init__.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/__init__.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo_examples/snippets.md",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/opengltutorial/advanced_lighting/shadows/main.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/graphics_examples/mesh.py",
		"/C/Program Files/Blender Foundation/Blender 2.83/2.83/python/lib/_py_abc.py",
		"/C/Users/andris/Desktop/Rodin2/RodinWalkingThinking.abc",
		"/C/Users/andris/Desktop/libs/openexr/INSTALL.md",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/shader.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/shader.frag",
		"/C/Users/andris/anaconda3/lib/pathlib.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/example.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/window.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/shader.vert",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/gloo/texture.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/helpers.py",
		"/C/Users/andris/Desktop/PyAssimp env/assimp-tester/share/examples/pyassimp/transformations.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/shader.frag",
		"/C/Users/andris/Desktop/PyAssimp env/main.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/opengltutorial/modelloading/main.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/with_glfw.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/render/shader.vert",
		"/C/Users/andris/Desktop/Rodin2/src/rodin2_character180_v03.py",
		"/C/Users/andris/Desktop/Rodin2/src/rodin2_character180_v04.py",
		"/C/Users/andris/Desktop/Rodin2/src/rodin2_character180_v05.py",
		"/C/Users/andris/Desktop/Rodin2/src/rodin2_follow180_v01.py",
		"/C/Users/andris/Desktop/Rodin2/src/rodin2_follow-orbit180_v01.py",
		"/C/Users/andris/Desktop/Rodin2/src/rodin2_character180_v02.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/widgets/graphwidget.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/read.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/widgets/viewer2D.py",
		"/C/Users/andris/Desktop/thumbnails/tumbs.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/daglib.py",
		"/C/Users/andris/Documents/BABPythonModules/editor/examples/pythonflow-MVC-example.py",
		"/C/Users/andris/Desktop/MakePythonDroppable.reg"
	],
	"find":
	{
		"height": 39.0
	},
	"find_in_files":
	{
		"height": 115.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"viewer",
			"draw_Scene",
			"'draw'",
			".draw",
			"render",
			"draw_scene",
			"pbr_fbo",
			"glClearColor",
			"32",
			"GL_TEXTURE_CUBE_MAP_SEAMLESS",
			"128",
			"env_cubemap",
			"lights",
			"self.lights",
			"draw_scene",
			"pointlight",
			"cutoff",
			"cutOff",
			"spotlight",
			"light_project",
			"dirlight",
			"dirlight['radius']",
			"dirlight",
			"shadow_wi",
			"glm.ortho",
			"dirlight",
			"enumerate",
			"for i in",
			".cuto",
			"cube_depth_program",
			"LightType",
			"lights",
			"spotlight",
			"point_light",
			"dir_light",
			"spot_light",
			"spotlight",
			"logging",
			"depthShadowCubemap",
			"::",
			"shadow_wi",
			"type'",
			"glGenFramebuffers",
			"glm.perspective",
			"shadowmap pass",
			"shadow",
			"lights[0]['pro",
			"shadow_tex",
			"shadow_fbo",
			"MAX_REFLECTION_LOD",
			"GL_CULL",
			"light_projec",
			"lights[",
			"light_pro",
			"glCull",
			"shadow_fbo",
			"shadow_tex",
			"light_view",
			"irradiance_program",
			"pingpong_buffer",
			"pingpong_fbo",
			"gaussianblur_program",
			"bloom_tex",
			"bloom_program",
			"bloom_fbo",
			"blur_fbo",
			"viewMatrix",
			"GLFWViewer",
			"color_buffers",
			"depth",
			"glDrawBuffers",
			"gPosition",
			"rbo",
			"tonemapping_program",
			"tonamapping_",
			"gaussianblur",
			"debug_quad",
			"gaussianblur_program",
			"capture_views",
			"imdraw.cube",
			"imdraw",
			"CULL",
			"glFramebuffer",
			"glCheck",
			"program.create",
			"(vao, ebo, count)",
			"draw_scene",
			"phong_program",
			"draw.",
			"cube.",
			"skybox_tex",
			"0f",
			"draw_",
			"quad",
			"draw_plane",
			"draw_quad",
			"program",
			"use_pro",
			"Cull",
			"glUseProgram",
			"use_program",
			"fragment_source",
			"vertex_source",
			"depth_fragment_source",
			"depth_vertex_source",
			"depth_to_color_fragment_source",
			"depth_to_color_vertex_source",
			"depth_to_color_fragment_source",
			"use_shader",
			"128",
			"lightDir",
			"texture",
			"border",
			"1024",
			"fshader_id",
			"fragmentShader",
			"vshader_id",
			"program_id",
			"1.0",
			"elements_id",
			"shader",
			"elements_id",
			"elements",
			"GL_TEXTURE",
			"texture",
			"diffuseMap",
			"drawQuad",
			"projection_matrix"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"self",
			"self.radius",
			".",
			"bloom_blur_texs",
			"bloom_blur_fbos",
			"blur_program",
			"highlights_tex",
			"highlights_program",
			"highlights_fbo",
			"hdr_color_buffers",
			"imdraw.",
			"0",
			"cube",
			"plane",
			"quad",
			"phong_fs",
			"phong_vs",
			"simple_depth_fs",
			"simple_depth_vs",
			"debug_quad_depth_fs",
			"debug_quad_vs",
			"fragment_shader",
			"fragment_source",
			"vertex_shader",
			"program",
			"0.5",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "render/graphics/scene.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5618,
						"regions":
						{
						},
						"selection":
						[
							[
								3682,
								3289
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 743.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "render/glsl/PBR2.fs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 6990,
						"regions":
						{
						},
						"selection":
						[
							[
								4740,
								4605
							]
						],
						"settings":
						{
							"syntax": "Packages/OpenGL Shading Language (GLSL)/GLSL.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1747.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "render/graphics/example/trimesh_example.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1843,
						"regions":
						{
						},
						"selection":
						[
							[
								1159,
								1159
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 196.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.385865150284,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.Terminus":
	{
		"height": 194.0
	},
	"output.exec":
	{
		"height": 246.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.hex_viewer_inspector":
	{
		"height": 196.0
	},
	"pinned_build_system": "Packages/Virtualenv/Python + Virtualenv.sublime-build",
	"project": "editor.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 269.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
